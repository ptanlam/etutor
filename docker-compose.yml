version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
    mem_limit: 1Gb
    cpus: 0.2
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - development

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Admin@123
    volumes:
      - mssql-data:/var/opt/mssql/data
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ""$$SA_PASSWORD"" -Q "SELECT 1" || exit 1
      timeout: 45s
      interval: 10s
      retries: 10
    mem_limit: 1Gb
    cpus: 0.2
    ports:
      - '1433:1433'
    networks:
      - development

  mongo:
    image: mongo:5.0.5
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Admin123
    volumes:
      - mongo-data:/data/db
    mem_limit: 512m
    cpus: 0.1
    ports:
      - '27017:27017'
    networks:
      - development

  redis:
    image: redis:6.2.6-bullseye
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
    ports:
      - '6379:6379'
    mem_limit: 128m
    cpus: 0.1
    networks:
      - development

  mailhog:
    image: mailhog/mailhog:v1.0.1
    mem_limit: 15m
    cpus: 0.1
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - development

  kong:
    build: ./kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    mem_limit: 256m
    cpus: 0.1
    restart: on-failure
    ports:
      - '8080:8000'
      - '8001:8001'
      - '8443:8443'
      - '8444:8444'
    networks:
      - development

  identity-service:
    build: ./identity-service
    environment:
      - PORT=3000
      - GRPC_PORT=4000
      - Mongo__ConnectionString=mongodb://root:Admin123@host.docker.internal:27017
      - Mongo__DatabaseName=IdentityServiceDb
      - Mongo__Collection=UserClaims
      - IdentityProvider__Authority={{AUTH0_AUTHORITY}}
      - IdentityProvider__Audience={AUTH0_AUDIENCE}
      - Redis__Url=host.docker.internal:6379
      - AllowedOrigins=http://localhost:3000,http://localhost:3001
      - GrpcServices__ConstantsService=http://constant-service:4000
      - GrpcServices__StorageService=http://storage-service:4000
      - Auth0__Domain={AUTH0_DOMAIN}
      - Auth0__ClientId={AUTH0_CLIENTID}
      - Auth0__ClientSecret={AUTH0_CLIENT_SECRET}
      - Auth0__Audience={AUTH0_AUDIENCE}
      - Auth0__GrantType=client_credentials
      - RabbitMq__Host=amqp://host.docker.internal:5672
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
    cpus: 0.1
    mem_limit: 64m
    restart: on-failure
    ports:
      - '3010:3000'
      - '4000:4000'
    networks:
      - development

  constant-service:
    build: ./constant-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4000
      - DATABASE_USER=root
      - DATABASE_PASS=Admin123
      - DATABASE_URI=mongodb://host.docker.internal:27017
      - DATABASE_NAME=ConstantServiceDb
      - IDENTITY_PROVIDER_AUTHORITY=https://dev-914wvn2h.us.auth0.com/
      - IDENTITY_PROVIDER_AUDIENCE=etutor-api
    cpus: 0.1
    mem_limit: 64m
    restart: on-failure
    ports:
      - '3011:3000'
      - '4001:4000'
    networks:
      - development

  tutor-service:
    build: ./tutor-service
    environment:
      - PORT=3000
      - GRPC_PORT=4000
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=TutorServiceDb;User=SA;Password=Admin@123
      - GrpcServices__StorageService=http://storage-service:4000
      - GrpcServices__CoursesService=http://course-service:4000
      - GrpcServices__ConstantsService=http://constant-service:4000
      - GrpcServices__IdentitiesService=http://identity-service:4000
      - AllowedOrigins=http://localhost:3000,http://localhost:3001
      - RabbitMq__Host=amqp://host.docker.internal:5672
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - IdentityProvider__Authority={AUTH0_AUTHORITY}
      - IdentityProvider__Audience={AUTH0_AUDIENCE}
    cpus: 0.1
    mem_limit: 128m
    restart: on-failure
    ports:
      - '3012:3000'
      - '4002:4000'
    networks:
      - development

  course-service:
    build: ./course-service
    environment:
      - PORT=3000
      - GRPC_PORT=4000
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=CourseServiceDb;User=SA;Password=Admin@123
      - AllowedOrigins=http://localhost:3000,http://localhost:3001
      - GrpcServices__ConstantsService=http://constant-service:4000
      - GrpcServices__StorageService=http://storage-service:4000
      - GrpcServices__TutorsService=http://tutor-service:4000
      - GrpcServices__EnrollmentsService=http://enrollment-service:4000
      - GrpcServices__SessionsService=http://session-service:4000
      - RabbitMq__Host=amqp://host.docker.internal:5672
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - IdentityProvider__Authority={AUTH0_AUTHORITY}
      - IdentityProvider__Audience={AUTH0_AUDIENCE}
    cpus: 0.1
    mem_limit: 128m
    healthcheck:
      test: curl --fail http://host.docker.internal/healthz || exit
      interval: 10s
      timeout: 10s
    restart: on-failure
    ports:
      - '3013:3000'
      - '4003:4000'
    networks:
      - development

  feedback-service:
    build: ./feedback-service
    environment:
      - PORT=3000
      - DATABASE_USER=root
      - DATABASE_PASS=Admin123
      - DATABASE_URI=mongodb://host.docker.internal:27017
      - DATABASE_NAME=FeedbackServiceDb
      - IDENTITIES_SERVICE=identity-service:4000
    cpus: 0.1
    mem_limit: 64m
    restart: on-failure
    ports:
      - '3014:3000'
    networks:
      - development

  storage-service:
    build: ./storage-service
    environment:
      - GRPC_CONNECTION_URL=0.0.0.0:4000
      - PORT=3000
      - DB_HOST=host.docker.internal
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=Admin@123
      - DB_NAME=StorageServiceDb
      - RABBIT_MQ_URI=amqp://guest:guest@host.docker.internal
      - AWS_REGION={AWS_REGION}
      - AWS_ACCESS_KEY_ID={AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY={AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET={AWS_BUCKET}
    mem_limit: 256m
    cpus: 0.1
    restart: on-failure
    ports:
      - '4005:4000'
    networks:
      - development

  enrollment-service:
    build: ./enrollment-service
    environment:
      - PORT=3000
      - GRPC_PORT=4000
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=EnrollmentServiceDb;User=SA;Password=Admin@123
      - AllowedOrigins=http://localhost:3000,http://localhost:3001
      - RabbitMq__Host=amqp://host.docker.internal
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - GrpcServices__CoursesService=http://course-service:4000
      - GrpcServices__SessionsService=http://session-service:4000
    mem_limit: 64m
    cpus: 0.1
    restart: on-failure
    ports:
      - '3016:3000'
      - '4006:4000'
    networks:
      - development

  session-service:
    build: ./session-service
    environment:
      - PORT=3000
      - GRPC_CONNECTION_URL=0.0.0.0:4000
      - ORIGINS=http://localhost:3000
      - DATABASE_USER=root
      - DATABASE_PASS=Admin123
      - DATABASE_URI=mongodb://host.docker.internal:27017
      - DATABASE_NAME=SessionServiceDb
      - RABBIT_MQ_URI=amqp://guest:guest@host.docker.internal:5672
      - COURSES_SERVICE=course-service:4000
    mem_limit: 64m
    cpus: 0.1
    restart: on-failure
    ports:
      - '3017:3000'
      - '4007:4000'
    networks:
      - development

  payment-service:
    build: ./payment-service
    environment:
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=PaymentServiceDb;User=SA;Password=Admin@123
      - AllowedOrigins=http://localhost:3000,http://localhost:3001
      - Redis__Url=host.docker.internal:6379
      - RabbitMq__Host=amqp://host.docker.internal:5672
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - Paypal__SandboxUrl=https://api-m.sandbox.paypal.com/
      - Paypal__Secret={PAYPAL_SECRET}
      - Paypal__ClientId={PAYPAL_CLIENTID}
      - GrpcServices__CoursesService=http://course-service:4000
      - GrpcServices__TutorsService=http://tutor-service:4000
    mem_limit: 64m
    cpus: 0.1
    restart: on-failure
    ports:
      - '3018:80'
    networks:
      - development

  notification-service:
    build: ./notification-service
    environment:
      - PORT=3000
      - DATABASE_URL=mongodb+srv://{MONGO_USER}:{MONGO_PASSWORD}@{MONGO_URL}/NotificationServiceDb
      - RABBIT_MQ_URI=amqp://guest:guest@host.docker.internal:5672
      - SMTP_URI=smtp://host.docker.internal:1025
    cpus: 0.1
    restart: on-failure
    ports:
      - '3019:3000'
    networks:
      - development

networks:
  development:
    driver: bridge
